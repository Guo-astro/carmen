version: 2

step-library:
  - &install-deps
      run:
          name: Install apt dependencies
          command: |
            set +e
            apt-get update -y
            apt-get install -y build-essential python git curl
            curl -sS http://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
            echo 'deb http://dl.yarnpkg.com/debian/ stable main' | tee /etc/apt/sources.list.d/yarn.list
            apt-get update -y
            apt-get -y install yarn
            # setup nvm
            export NVM_DIR=${HOME}/.nvm
            mkdir -p ${NVM_DIR}
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
            echo 'export NVM_DIR=${HOME}/.nvm' >> $BASH_ENV
            echo "[ -s \"${NVM_DIR}/nvm.sh\" ] && . \"${NVM_DIR}/nvm.sh\"" >> $BASH_ENV

  - &yarn-install
      run:
          name: "Yarn install"
          command: |
            set +e
            yarn install
            yarn global add node-gyp
            # source compile carmen-cache
            (cd node_modules/@mapbox/carmen-cache && ./scripts/setup.sh --config local.env && source local.env && make)

  - &yarn-test
      run:
          name: "Yarn lint/coverage/bench"
          command: |
            set +e
            yarn run lint
            yarn run coverage
            yarn run bench
          no_output_timeout: 12000

jobs:
    node6:
        docker:
            - image: ubuntu:16.04
        steps:
            - *install-deps
            - run: nvm install 6 && npm alias default 6
            - checkout
            - *yarn-install
            - *yarn-test
    node8:
        docker:
            - image: ubuntu:16.04
        steps:
            - *install-deps
            - run: nvm install 8 && npm alias default 8
            - checkout
            - *yarn-install
            - *yarn-test

workflows:
    version: 2
    build:
        jobs:
            - node6
            - node8
