version: 2

step-library:
  - &install-node
      run:
          name: Install node
          command: |
            set +e
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
            [ -s "${NVM_DIR}/nvm.sh" ] && \. "${NVM_DIR}/nvm.sh"
            nvm install ${NODE_VERSION}
            nvm alias default ${NODE_VERSION}
            echo "[ -s \"${NVM_DIR}/nvm.sh\" ] && . \"${NVM_DIR}/nvm.sh\"" >> $BASH_ENV

  - &setup-deps
      run:
          name: "Add ubuntu-toolchain"
          command: |
            set +e
            apt-get update -y
            apt-get install -y build-essential python software-properties-common git curl postgresql-client
            apt-add-repository -y ppa:ubuntu-toolchain-r/test
            curl -sS http://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
            echo 'deb http://dl.yarnpkg.com/debian/ stable main' | tee /etc/apt/sources.list.d/yarn.list
            apt-get update -y
            apt-get -y install libstdc++-5-dev yarn

  - &yarn-install
      run:
          name: "Add ubuntu-toolchain"
          command: |
            yarn install
            yarn global add node-gyp
            (cd node_modules/@mapbox/carmen-cache && make)

  - &yarn-test
      run:
          name: "Add ubuntu-toolchain"
          command: |
            yarn run lint
            yarn run coverage
            yarn run bench
          no_output_timeout: 12000

jobs:
    node6:
        docker:
            - image: ubuntu:16.04
        steps:
            - checkout
            - run: echo 'export NODE_VERSION=6' >> $BASH_ENV
            - run: echo 'export NVM_DIR=${HOME}/.nvm' >> $BASH_ENV
            - *setup-deps
            - *install-node
            - *yarn-install
            - *yarn-test
    node8:
        docker:
            - image: ubuntu:16.04
        steps:
            - checkout
            - run: echo 'export NODE_VERSION=8' >> $BASH_ENV
            - run: echo 'export NVM_DIR=${HOME}/.nvm' >> $BASH_ENV
            - *setup-deps
            - *install-node
            - *yarn-install
            - *yarn-test

workflows:
    version: 2
    build:
        jobs:
            - node6
            - node8
